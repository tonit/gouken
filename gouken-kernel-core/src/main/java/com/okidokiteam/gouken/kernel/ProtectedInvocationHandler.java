package com.okidokiteam.gouken.kernel;import java.lang.reflect.InvocationHandler;import java.lang.reflect.Method;import java.lang.reflect.UndeclaredThrowableException;import com.okidokiteam.gouken.VaultServiceException;/** * Wrapper for real {@link InvocationHandler}. * Any Exception beind thrown by {@code realHandler.invoke()}  will be wrapped with a {@code VaultServiceException}. */public class ProtectedInvocationHandler implements InvocationHandler {    private InvocationHandler m_sub;    public ProtectedInvocationHandler( InvocationHandler realHandler )    {        m_sub = realHandler;    }    public Object invoke( Object o, Method method, Object[] objects )        throws Throwable    {        Object ret = null;        try {            ret = m_sub.invoke( o, method, objects );        } catch( Exception t ) {            throw new VaultServiceException( "Wrapped Exception!", t );        }        return ret;    }}